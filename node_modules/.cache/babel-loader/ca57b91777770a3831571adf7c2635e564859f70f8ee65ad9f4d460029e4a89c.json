{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport dialog from './components/Dialog.jsx';\nimport { Container, Row, Table, Modal, show } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Tasks (ToDolist) state\n\n  const [toDo, setToDo] = useState([]);\n\n  // temp State\n\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  // const[dialog, setDialog] = useState({\n  //   message:\"\",\n  //   isLoading:false,\n  // })\n\n  const [deleteId, setDeleteId] = useState('');\n\n  //Add task\n\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  // Delete Task\n\n  // const handleDelete = id => {\n  //   let newTasks = toDo.filter( task => task.id !== id)\n  // }\n\n  const deleteTask = id => {\n    console.log(id);\n    let newTasks = toDo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  };\n\n  // Mark Task as done or completed\n\n  const markDone = id => {\n    const newTask = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  // Cancel Update\n\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  // Change task for update\n\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n\n  // Update Task\n\n  const UpdateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updatedObject);\n    setUpdateData(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you are reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeTask: changeTask,\n      UpdateTask: UpdateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }, this), toDo && toDo.length ? '' : 'No Tasks...', /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpdateData: setUpdateData,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fFkhQcIzAzzhT6/JPwm/UagVlCs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddTaskForm","UpdateForm","ToDo","dialog","Container","Row","Table","Modal","show","jsxDEV","_jsxDEV","App","_s","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","deleteId","setDeleteId","addTask","num","length","newEntry","id","title","status","deleteTask","console","log","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","UpdateTask","filterRecords","updatedObject","className","children","onHide","handleClose","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Footer","Button","variant","onClick","_c","$RefreshReg$"],"sources":["D:/to-do/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\n\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport dialog from './components/Dialog.jsx';\n\n\nimport {Container, Row, Table,Modal, show} from 'react-bootstrap'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nimport './App.css';\n\nfunction App() {\n\n  // Tasks (ToDolist) state\n\n  const[toDo, setToDo] = useState([]);\n\n\n  // temp State\n\n  const[newTask, setNewTask] = useState('');\n  const[updateData, setUpdateData] = useState('');\n\n  // const[dialog, setDialog] = useState({\n  //   message:\"\",\n  //   isLoading:false,\n  // })\n\n  const [deleteId, setDeleteId]=useState('')\n\n\n    \n\n    \n    //Add task\n\n    const addTask = () => {\n      if(newTask) {\n          let num = toDo.length +1\n          let newEntry = {id:num, title:newTask, status:false}\n          setToDo([...toDo, newEntry])\n          setNewTask('');\n      }\n\n    }\n\n    // Delete Task\n    \n\n    // const handleDelete = id => {\n    //   let newTasks = toDo.filter( task => task.id !== id)\n    // }\n\n    const deleteTask = (id) => {\n        console.log(id);\n        let newTasks = toDo.filter( task => task.id !== id)\n        setToDo(newTasks);\n    }\n\n    \n\n\n    // Mark Task as done or completed\n\n    const markDone = (id) => {\n      const newTask = toDo.map( task => {\n        if (task.id === id ) {\n          return ({...task, status:!task.status})\n        }\n        return task;\n      })\n      setToDo(newTask)\n\n    }\n\n    // Cancel Update\n\n    const cancelUpdate = () => {\n      setUpdateData('');\n\n    }\n\n    // Change task for update\n\n    const changeTask = (e) => {\n      let newEntry = {\n        id: updateData.id,\n        title: e.target.value,\n        status: updateData.status ? true : false\n      }\n      setUpdateData(newEntry);\n\n    }\n\n    // Update Task\n\n    const UpdateTask = () => {\n      let filterRecords = [...toDo].filter(task => task.id !==updateData.id);\n      let updatedObject = [...filterRecords, updateData]\n      setToDo(updatedObject);\n      setUpdateData(\"\");\n\n    }\n\n  return (\n    <div className=\"container App\">\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you are reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n\n\n\n      <br /><br/>\n      <h2>To Do List</h2>\n      <br /><br/>\n\n      {updateData && updateData ? (\n        <UpdateForm \n          updateData={updateData}\n          changeTask={changeTask}\n          UpdateTask={UpdateTask}\n          cancelUpdate={cancelUpdate}\n        />\n      ):(\n          <AddTaskForm \n            newTask={newTask}\n            setNewTask={setNewTask}\n            addTask={addTask}\n          />\n      )}\n      {toDo && toDo.length ? '':'No Tasks...'}\n\n\n      <ToDo \n      toDo={toDo}\n      markDone={markDone}\n      setUpdateData={setUpdateData}\n      deleteTask={deleteTask}\n      />\n\n      {/* <dialog \n        message={message}\n      /> */}\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}