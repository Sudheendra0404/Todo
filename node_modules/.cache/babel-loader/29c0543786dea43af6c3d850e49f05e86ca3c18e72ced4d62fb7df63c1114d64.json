{"ast":null,"code":"var _jsxFileName = \"D:\\\\Talking_Lands\\\\To do list\\\\to-do\\\\src\\\\components\\\\ToDo.jsx\";\nimport react from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faL, faPen, faTrash, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: e => markDone(task.id),\n              title: \"Completed/Not Completed\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["react","FontAwesomeIcon","faCircleCheck","faL","faPen","faTrash","faTrashCan","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","toDo","markDone","setUpdateData","deleteTask","children","sort","a","b","id","map","task","index","React","className","status","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","e","icon","_c","$RefreshReg$"],"sources":["D:/Talking_Lands/To do list/to-do/src/components/ToDo.jsx"],"sourcesContent":["import react from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n  faCircleCheck, faL, faPen, faTrash, faTrashCan\r\n } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ToDo = ({toDo, markDone, setUpdateData, deleteTask})=>{\r\n    return(\r\n        <>\r\n            {toDo && toDo\r\n        .sort((a, b)=>a.id > b.id ? 1:-1)\r\n        .map((task, index) => {\r\n          return(\r\n            <React.Fragment key={task.id}>\r\n\r\n\r\n              <div className='col taskBg'>\r\n\r\n                <div className={task.status? 'done': ''}>\r\n                  <span className='taskNumber'>{index + 1}</span>\r\n                  <span className='taskText'>{task.title}</span>\r\n                </div>\r\n\r\n                <div className=\"iconsWrap\">\r\n                  \r\n                  <span onClick={ (e) => markDone(task.id)} title='Completed/Not Completed'>\r\n                      <FontAwesomeIcon icon={faCircleCheck}/> \r\n                  </span>\r\n\r\n\r\n                  {task.status ? null : (\r\n                    <span title='Edit' onClick={() => setUpdateData({id: task.id, title:task.title, status:task.status ? true : false})}>\r\n                    <FontAwesomeIcon icon={faPen}/>\r\n                  </span>\r\n                  )}\r\n                  \r\n\r\n                  <span title='Delete' onClick={()=> deleteTask(task.id)}>\r\n                    <FontAwesomeIcon icon={faTrashCan}/>\r\n                  </span>\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n              \r\n            </React.Fragment>\r\n          )\r\n        })\r\n      }\r\n\r\n\r\n    \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}