{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport dialog from './components/Dialog.jsx';\nimport { Container, Row, Table, Modal, show, handleClose, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDo, setToDo] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n  const [deleteTask, setDeleteTask] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n  const handleDelete = task => {\n    setDeleteTask(task);\n    setShowConfirmation(true);\n  };\n  const confirmDelete = () => {\n    // Perform the delete action using the deleteTask value\n    deleteTask && deleteTask.id && deleteTask.id !== '' ? deleteTask(deleteTask.id) : console.log('Invalid task to delete');\n    setDeleteTask(null);\n    setShowConfirmation(false);\n  };\n  const markDone = id => {\n    const newTask = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  // Cancel Update\n\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  // Change task for update\n\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n\n  // Update Task\n\n  const UpdateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updatedObject);\n    setUpdateData(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you are reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeTask: changeTask,\n      UpdateTask: UpdateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this), toDo && toDo.length ? '' : 'No Tasks...', /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpdateData: setUpdateData\n      // deleteTask={deleteTask}\n      ,\n      setShow: setShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7GnV5IBIMbE1944C8kKnBe1ku9g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddTaskForm","UpdateForm","ToDo","dialog","Container","Row","Table","Modal","show","handleClose","Button","jsxDEV","_jsxDEV","App","_s","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","deleteTask","setDeleteTask","showConfirmation","setShowConfirmation","addTask","num","length","newEntry","id","title","status","handleDelete","task","confirmDelete","console","log","markDone","map","cancelUpdate","changeTask","e","target","value","UpdateTask","filterRecords","filter","updatedObject","className","children","onHide","Body","fileName","_jsxFileName","lineNumber","columnNumber","Footer","variant","onClick","setShow","_c","$RefreshReg$"],"sources":["D:/to-do/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\n\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport dialog from './components/Dialog.jsx';\nimport {Container, Row, Table,Modal, show,handleClose,Button} from 'react-bootstrap'\n\n\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nimport './App.css';\n\nfunction App() {\n  const[toDo, setToDo] = useState([]);\n  const[newTask, setNewTask] = useState('');\n  const[updateData, setUpdateData] = useState('');\n  const [deleteTask, setDeleteTask] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n\n  \n\n\n    const addTask = () => {\n      if(newTask) {\n          let num = toDo.length +1\n          let newEntry = {id:num, title:newTask, status:false}\n          setToDo([...toDo, newEntry])\n          setNewTask('');\n      }\n    }\n\n    const handleDelete = (task) => {\n      setDeleteTask(task);\n      setShowConfirmation(true);\n    };\n\n    const confirmDelete = () => {\n      // Perform the delete action using the deleteTask value\n      deleteTask && deleteTask.id && deleteTask.id !== ''\n        ? deleteTask(deleteTask.id)\n        : console.log('Invalid task to delete');\n      setDeleteTask(null);\n      setShowConfirmation(false);\n    };\n    \n    \n\n    const markDone = (id) => {\n      const newTask = toDo.map( task => {\n        if (task.id === id ) {\n          return ({...task, status:!task.status})\n        }\n        return task;\n      })\n      setToDo(newTask)\n\n    }\n\n    // Cancel Update\n\n    const cancelUpdate = () => {\n      setUpdateData('');\n    }\n\n    \n\n    // Change task for update\n\n    const changeTask = (e) => {\n      let newEntry = {\n        id: updateData.id,\n        title: e.target.value,\n        status: updateData.status ? true : false\n      }\n      setUpdateData(newEntry);\n\n    }\n\n    // Update Task\n\n    const UpdateTask = () => {\n      let filterRecords = [...toDo].filter(task => task.id !==updateData.id);\n      let updatedObject = [...filterRecords, updateData]\n      setToDo(updatedObject);\n      setUpdateData(\"\");\n\n    }\n\n  return (\n    <div className=\"container App\">\n    <Modal show={show} onHide={handleClose}>\n        {/* <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header> */}\n        <Modal.Body>Woohoo, you are reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"primary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"secondary\" onClick={handleDelete}>\n            Delete\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n      \n      <br /><br/>\n      <h2>To Do List</h2>\n      <br /><br/>\n\n      {updateData && updateData ? (\n        <UpdateForm \n          updateData={updateData}\n          changeTask={changeTask}\n          UpdateTask={UpdateTask}\n          cancelUpdate={cancelUpdate}\n        />\n      ):(\n          <AddTaskForm \n            newTask={newTask}\n            setNewTask={setNewTask}\n            addTask={addTask}\n          />\n      )}\n      {toDo && toDo.length ? '':'No Tasks...'}\n\n\n\n\n      <ToDo \n      toDo={toDo}\n      markDone={markDone}\n      setUpdateData={setUpdateData}\n      // deleteTask={deleteTask}\n      setShow={setShow}\n      />\n\n      {/* <dialog \n        message={message}\n      /> */}\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}