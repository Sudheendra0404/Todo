{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport { Container, Row, Table, Modal, show, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDo, setToDo] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n  const [deleteTask, setDeleteTask] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [show, setShow] = useState(false);\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n  const handleDelete = task => {\n    setDeleteTask(task);\n    setShowConfirmation(true);\n  };\n  const confirmDelete = () => {\n    if (deleteTask && deleteTask.id) {\n      const taskId = deleteTask.id;\n      const updatedTasks = toDo.filter(task => task.id !== taskId);\n      setToDo(updatedTasks);\n    } else {\n      alert('Invalid task to delete');\n    }\n    setDeleteTask(null);\n    setShowConfirmation(false);\n  };\n  const markDone = id => {\n    const newTask = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n  const UpdateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updatedObject);\n    setUpdateData('');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeTask: changeTask,\n      UpdateTask: UpdateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), toDo && toDo.length ? '' : 'No Tasks...', /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpdateData: setUpdateData,\n      setShowConfirmation: setShowConfirmation,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmation,\n      onHide: () => setShowConfirmation(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: confirmDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowConfirmation(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ruKgWjPBlbanOizFio1lnzMZFPU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddTaskForm","UpdateForm","ToDo","Container","Row","Table","Modal","show","Button","jsxDEV","_jsxDEV","App","_s","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","deleteTask","setDeleteTask","showConfirmation","setShowConfirmation","setShow","addTask","num","length","newEntry","id","title","status","handleDelete","task","confirmDelete","taskId","updatedTasks","filter","alert","markDone","map","cancelUpdate","changeTask","e","target","value","UpdateTask","filterRecords","updatedObject","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["D:/to-do/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport { Container, Row, Table, Modal, show, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  const [toDo, setToDo] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n  const [deleteTask, setDeleteTask] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = { id: num, title: newTask, status: false };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  const handleDelete = (task) => {\n    setDeleteTask(task);\n    setShowConfirmation(true);\n  };\n\n  const confirmDelete = () => {\n    if (deleteTask && deleteTask.id) {\n      const taskId = deleteTask.id;\n      const updatedTasks = toDo.filter(task => task.id !== taskId);\n      setToDo(updatedTasks);\n    } else {\n      alert('Invalid task to delete');\n    }\n    setDeleteTask(null);\n    setShowConfirmation(false);\n  };\n  \n\n  const markDone = (id) => {\n    const newTask = toDo.map((task) => {\n      if (task.id === id) {\n        return { ...task, status: !task.status };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  const changeTask = (e) => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false,\n    };\n    setUpdateData(newEntry);\n  };\n\n  const UpdateTask = () => {\n    let filterRecords = [...toDo].filter((task) => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updatedObject);\n    setUpdateData('');\n  };\n\n  return (\n    <Container fluid className=\"App\">\n      <h2>To Do List</h2>\n\n      {updateData && updateData ? (\n        <UpdateForm\n          updateData={updateData}\n          changeTask={changeTask}\n          UpdateTask={UpdateTask}\n          cancelUpdate={cancelUpdate}\n        />\n      ) : (\n        <AddTaskForm\n          newTask={newTask}\n          setNewTask={setNewTask}\n          addTask={addTask}\n        />\n      )}\n\n      {toDo && toDo.length ? '' : 'No Tasks...'}\n\n      <ToDo\n        toDo={toDo}\n        markDone={markDone}\n        setUpdateData={setUpdateData}\n        setShowConfirmation={setShowConfirmation}\n        handleDelete={handleDelete}\n      />\n\n      <Modal show={showConfirmation} onHide={() => setShowConfirmation(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Task</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Are you sure you want to delete this task?</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={confirmDelete}>Delete</Button>\n          <Button variant=\"secondary\" onClick={() => setShowConfirmation(false)}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}