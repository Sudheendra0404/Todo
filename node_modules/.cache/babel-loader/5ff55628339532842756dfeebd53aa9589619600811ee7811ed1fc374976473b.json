{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do\\\\src\\\\components\\\\ToDo.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    setShow,\n    handleDelete\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"auto\",\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: e => markDone(task.id),\n              title: \"Completed/Not Completed\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 21\n            }, this), !task.status && /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => handleDelete(task),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashAlt","Col","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","toDo","markDone","setUpdateData","setShow","handleDelete","children","sort","a","b","id","map","task","index","className","status","fileName","_jsxFileName","lineNumber","columnNumber","title","xs","onClick","e","icon","_c","$RefreshReg$"],"sources":["D:/to-do/src/components/ToDo.jsx"],"sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck, faPen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nconst ToDo = ({ toDo, markDone, setUpdateData, setShow, handleDelete }) => {\r\n  return (\r\n    <>\r\n      {toDo &&\r\n        toDo\r\n          .sort((a, b) => (a.id > b.id ? 1 : -1))\r\n          .map((task, index) => {\r\n            return (\r\n              <React.Fragment key={task.id}>\r\n                <Row className=\"taskBg\">\r\n                  <Col className={task.status ? 'done' : ''}>\r\n                    <span className=\"taskNumber\">{index + 1}</span>\r\n                    <span className=\"taskText\">{task.title}</span>\r\n                  </Col>\r\n\r\n                  <Col xs=\"auto\" className=\"iconsWrap\">\r\n                    <span onClick={(e) => markDone(task.id)} title=\"Completed/Not Completed\">\r\n                      <FontAwesomeIcon icon={faCircleCheck} />\r\n                    </span>\r\n\r\n                    {!task.status && (\r\n                      <span title=\"Edit\" onClick={() => setUpdateData({ id: task.id, title: task.title, status: task.status ? true : false })}>\r\n                        <FontAwesomeIcon icon={faPen} />\r\n                      </span>\r\n                    )}\r\n\r\n                    <span title=\"Delete\" onClick={() => handleDelete(task)}>\r\n                      <FontAwesomeIcon icon={faTrashAlt} />\r\n                    </span>\r\n                  </Col>\r\n                </Row>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}