{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do\\\\src\\\\components\\\\ToDo.jsx\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [show, setShow] = useState(false);\nconst handleClickDelete = id => {\n  setShow();\n  console.log(id);\n};\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: e => markDone(task.id),\n              title: \"Completed/Not Completed\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => handleClickDelete(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","Fragment","_Fragment","show","setShow","handleClickDelete","id","console","log","ToDo","_ref","toDo","markDone","setUpdateData","deleteTask","children","sort","a","b","map","task","index","className","status","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","e","icon","_c","$RefreshReg$"],"sources":["D:/to-do/src/components/ToDo.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCircleCheck,faPen,faTrashCan} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst [show, setShow]=useState(false)\r\n\r\nconst handleClickDelete = (id) => {\r\n  setShow()\r\n  console.log(id); \r\n}\r\n\r\n\r\n\r\n\r\nconst ToDo = ({toDo, markDone, setUpdateData, deleteTask})=>{\r\n    return(\r\n        <>\r\n        \r\n            {toDo && toDo\r\n                .sort((a, b)=>a.id > b.id ? 1:-1)\r\n                .map((task, index) => {\r\n                return(\r\n                <React.Fragment key={task.id}>\r\n\r\n              <div className='col taskBg'>\r\n\r\n                <div className={task.status? 'done': ''}>\r\n                  <span className='taskNumber'>{index + 1}</span>\r\n                  <span className='taskText'>{task.title}</span>\r\n                </div>\r\n \r\n                <div className=\"iconsWrap\">\r\n\r\n                  <span onClick={ (e) => markDone(task.id)} title='Completed/Not Completed'>\r\n                      <FontAwesomeIcon icon={faCircleCheck}/> \r\n                  </span>\r\n\r\n                  {task.status ? null : (\r\n                    <span title='Edit' onClick={() => setUpdateData({id: task.id, title:task.title, status:task.status ? true : false})}>\r\n                    <FontAwesomeIcon icon={faPen}/>\r\n                  </span>\r\n                  )}\r\n\r\n                  <span title='Delete' onClick={()=> handleClickDelete(task.id)}>\r\n                    <FontAwesomeIcon icon={faTrashCan}/>\r\n                  </span>\r\n                  \r\n                </div>\r\n              </div> \r\n            </React.Fragment>\r\n          )\r\n          })\r\n      }\r\n        </>\r\n    )}\r\n\r\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}